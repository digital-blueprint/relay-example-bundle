resources:
  Dbp\Relay\ExampleBundle\ApiPlatform\Place:
    types: ['https://schema.org/Place']
    shortName: 'ExamplePlace'
    normalizationContext:
      groups: ['ExamplePlace:output']
    denormalizationContext:
      groups: ['ExamplePlace:input']

    operations:
      ApiPlatform\Metadata\GetCollection:
        provider: Dbp\Relay\ExampleBundle\ApiPlatform\PlaceProvider
        uriTemplate: '/example/places'
        openapiContext:
          tags: ['Example']

      ApiPlatform\Metadata\Get:
        provider: Dbp\Relay\ExampleBundle\ApiPlatform\PlaceProvider
        uriTemplate: '/example/places/{identifier}'
        openapiContext:
          tags: ["Example"]

      ApiPlatform\Metadata\Put:
        provider: Dbp\Relay\ExampleBundle\ApiPlatform\PlaceProvider
        processor: Dbp\Relay\ExampleBundle\ApiPlatform\PlaceProcessor
        uriTemplate: '/example/places/{identifier}'
        openapiContext:
          tags: ["Example"]

      ApiPlatform\Metadata\Delete:
        provider: Dbp\Relay\ExampleBundle\ApiPlatform\PlaceProvider
        processor: Dbp\Relay\ExampleBundle\ApiPlatform\PlaceProcessor
        uriTemplate: '/example/places/{identifier}'
        openapiContext:
          tags: ["Example"]

      loggedin_only:
        security: "is_granted('IS_AUTHENTICATED_FULLY')"
        class: ApiPlatform\Metadata\Get
        method: GET
        provider: Dbp\Relay\ExampleBundle\ApiPlatform\PlaceProvider
        controller: Dbp\Relay\ExampleBundle\ApiPlatform\LoggedInOnly
        uriTemplate: "/example/places/{identifier}/loggedin-only"
        openapiContext:
          tags: ["Example"]
          summary: "Only works when logged in."

    properties:
      identifier:
        identifier: true
      name:
        iri: 'https://schema.org/name'
